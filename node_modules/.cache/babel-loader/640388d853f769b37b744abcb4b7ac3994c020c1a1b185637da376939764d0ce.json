{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebBd\\\\bd\\\\frontend\\\\src\\\\components\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, TextField, Button, Typography, Alert } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterContainer = styled(Container)({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  minHeight: '100vh',\n  padding: '2rem'\n});\n_c = RegisterContainer;\nconst RegisterPaper = styled(Paper)({\n  padding: '2rem',\n  width: '100%',\n  maxWidth: '400px',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '1.5rem'\n});\n_c2 = RegisterPaper;\nconst Register = ({\n  onLogin\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const response = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n\n      // Automatically log in the user after registration\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      onLogin(data.user);\n      navigate('/'); // Redirect to home page after successful registration and login\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(RegisterContainer, {\n    children: /*#__PURE__*/_jsxDEV(RegisterPaper, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Name\",\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          size: \"large\",\n          sx: {\n            mt: 2\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        sx: {\n          mt: 2\n        },\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"0hqXXgcB2Afvk7dAEeWVBk9V7DE=\", false, function () {\n  return [useNavigate];\n});\n_c3 = Register;\nexport default Register;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RegisterContainer\");\n$RefreshReg$(_c2, \"RegisterPaper\");\n$RefreshReg$(_c3, \"Register\");","map":{"version":3,"names":["React","useState","Container","Paper","TextField","Button","Typography","Alert","styled","Link","useNavigate","jsxDEV","_jsxDEV","RegisterContainer","display","flexDirection","alignItems","justifyContent","minHeight","padding","_c","RegisterPaper","width","maxWidth","gap","_c2","Register","onLogin","_s","name","setName","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","localStorage","setItem","token","user","err","children","elevation","variant","component","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","sx","mb","onSubmit","fullWidth","label","type","value","onChange","target","required","margin","color","size","mt","to","_c3","$RefreshReg$"],"sources":["D:/WebBd/bd/frontend/src/components/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Alert\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst RegisterContainer = styled(Container)({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  minHeight: '100vh',\r\n  padding: '2rem'\r\n});\r\n\r\nconst RegisterPaper = styled(Paper)({\r\n  padding: '2rem',\r\n  width: '100%',\r\n  maxWidth: '400px',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: '1.5rem'\r\n});\r\n\r\nconst Register = ({ onLogin }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    try {\r\n      const response = await fetch('/api/auth/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Registration failed');\r\n      }\r\n\r\n      // Automatically log in the user after registration\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      \r\n      onLogin(data.user);\r\n      navigate('/'); // Redirect to home page after successful registration and login\r\n\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RegisterContainer>\r\n      <RegisterPaper elevation={3}>\r\n        <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\r\n          Register\r\n        </Typography>\r\n\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n            margin=\"normal\"\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            margin=\"normal\"\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            margin=\"normal\"\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            size=\"large\"\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Register\r\n          </Button>\r\n        </form>\r\n        <Typography align=\"center\" sx={{ mt: 2 }}>\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </Typography>\r\n      </RegisterPaper>\r\n    </RegisterContainer>\r\n  );\r\n};\r\n\r\nexport default Register; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}